---
# init.yml
- name: Initial Environment Setup
  hosts: localhost
  become: yes
  gather_facts: yes
  vars:
    repo_dir: "{{ lookup('env','PWD') }}"
    run_git_pull: false
    data_repo_command: "git submodule update --init --recursive"
    neo4j_version: "5.18.0"
    neo4j_tarball: "neo4j-community-{{ neo4j_version }}-unix.tar.gz"
    neo4j_download_url: "https://neo4j.com/artifact.php?name={{ neo4j_tarball }}"
    neo4j_install_dir: "/opt/neo4j"
  tasks:
    - name: Check if current directory is a Git repository
      stat:
        path: "{{ repo_dir }}/.git"
      register: git_repo
      become: false

    - name: Fail if current directory is not a Git repository
      fail:
        msg: "Current directory {{ repo_dir }} is not a Git repository!"
      when: not git_repo.stat.exists
      become: false

    - name: Try Docker-based Neo4j setup first
      include_tasks: roles/docker_setup.yml

    - name: Execute Neo4j installation tasks (fallback if Docker unavailable)
      include_tasks: roles/neo4j_install.yml
      when: use_docker_neo4j is not defined or not use_docker_neo4j

    - name: Execute data repository tasks (initial mode)
      include_tasks: roles/repo_data.yml

    - name: Execute code repository tasks (pipenv install, no git pull)
      include_tasks: roles/repo_code.yml

    - name: Check and restart Neo4j if needed (setup commands)
      include_tasks: roles/neo4j_check_restart.yml
      when: use_docker_neo4j is not defined or not use_docker_neo4j

    - name: Initial environment setup complete
      debug:
        msg: |
          üéâ Initial environment setup complete!
          
          üìä Database: {{ 'Docker-based Neo4j' if (use_docker_neo4j | default(false)) else 'Native Neo4j installation' }}
          üêç Python: pipenv environment configured
          üìÅ Data: Git submodules initialized
          
          ‚ú® Next steps:
          1. Configure .env file with API keys
          2. Build knowledge base: python manage.py build m7
          3. Check status: python manage.py status
