[tool:pytest]
# Pytest configuration for consistent testing across environments

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths =
    common/tests
    tests

# Minimum version
minversion = 8.0

# Add current directory to Python path and configure options
addopts =
    --tb=short
    --strict-markers
    --strict-config
    --verbose
    --maxfail=10
    --disable-warnings
    --cov-report=term-missing
    --cov-fail-under=70

# Markers for test categorization (CI-aligned for p3 test superset)
markers =
    unit: Unit tests for individual components (CI priority)
    integration: Integration tests for cross-module functionality (CI secondary) - marks tests as integration tests (requiring real Neo4j database)
    slow: Slow tests that may take longer to run
    core: Tests for core system components (CI critical)
    agents: Tests for agent-related modules
    build: Tests for build and quality modules (CI critical)
    monitoring: Tests for monitoring components
    schemas: Tests for schema definitions (CI critical)
    utils: Tests for utility modules
    legacy: Tests for legacy/deprecated components
    fast: Fast tests for development (p3 check scope)
    ci: Tests that exactly match CI requirements (p3 test scope)

# Test timeout (prevent hanging tests)
timeout = 300

# Filtering options
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
