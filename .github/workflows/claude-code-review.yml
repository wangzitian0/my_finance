name: Claude Code Review

# Automatic code review workflow - runs on PR creation
# For interactive Claude sessions, use @claude mentions which trigger claude.yml instead
on:
  pull_request:
    types: [opened]  # Only run on initial PR creation to avoid duplicate comments
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Skip automatic review if PR title contains skip markers or manual review indicators
    if: |
      !contains(github.event.pull_request.title, '[skip-review]') &&
      !contains(github.event.pull_request.title, '[manual-review]') &&
      !contains(github.event.pull_request.title, '@claude') &&
      !contains(github.event.pull_request.body, '@claude manual')
    
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Changed to write for posting review comments
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request for this SEC Filing-Enhanced Quantitative Trading Platform and provide feedback on:
            
            **CLAUDE.md Policy Compliance:**
            - P3 workflow compliance (proper use of p3 commands)
            - SSOT I/O enforcement (use of common.core.directory_manager)
            - Configuration centralization (common/config/ usage)
            - English-only standard adherence
            - GitHub issue traceability
            
            **Technical Standards:**
            - Code quality and best practices
            - Two-layer modularity principle adherence
            - TypeScript usage for new features
            - Proper error handling and validation
            - Existing code pattern consistency
            
            **System Architecture:**
            - Integration with existing RAG and DCF systems
            - Database interaction patterns (PostgreSQL, Neo4j, Redis, Vector DB)
            - API design consistency
            - Performance considerations for financial data processing
            
            **Quality Assurance:**
            - Test coverage (note: F2 testing used in CI)
            - Security concerns for financial platform
            - Documentation updates
            - Potential bugs or issues
            
            Be constructive and helpful in your feedback. Focus on maintaining system integrity and preventing technical debt.
          # Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          use_sticky_comment: true
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4.1)
          # model: "claude-opus-4-1-20250805"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

