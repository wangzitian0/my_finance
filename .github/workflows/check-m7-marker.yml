name: Check M7 Test Marker

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

concurrency:
  group: m7-marker-check-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  check-m7-marker:
    name: "M7 Local Test Verification (MANDATORY)"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: "📥 Checkout code"
      uses: actions/checkout@v4
      with:
        fetch-depth: 1  # Only need latest commit
        
    - name: "🔍 Check M7 Test Marker"
      id: check_marker
      run: |
        echo "🔍 Checking for M7 test marker file..."
        
        if [ ! -f ".m7-test-passed" ]; then
          echo "❌ FAIL: M7 test marker file not found"
          echo "   This PR was not created with 'pixi run create-pr' or M7 test did not pass locally"
          echo ""
          echo "📝 Required steps:"
          echo "   1. Run locally: pixi run test-m7-e2e"
          echo "   2. Ensure test passes and creates .m7-test-passed file"
          echo "   3. Use: pixi run create-pr \"Your title\" ISSUE_NUMBER"
          echo ""
          exit 1
        fi
        
        echo "✅ M7 test marker found"
        
        # Read and validate marker file
        echo "📋 M7 Test Details:"
        cat .m7-test-passed
        
        # Extract key information
        COMMIT_HASH=$(grep "COMMIT_HASH=" .m7-test-passed | cut -d'=' -f2)
        TEST_TIMESTAMP=$(grep "TEST_TIMESTAMP=" .m7-test-passed | cut -d'=' -f2)
        M7_DATA_FILES=$(grep "M7_DATA_FILES=" .m7-test-passed | cut -d'=' -f2)
        VALIDATION_PASSED=$(grep "VALIDATION_PASSED=" .m7-test-passed | cut -d'=' -f2)
        
        echo ""
        echo "🔍 Validation Results:"
        echo "   📊 M7 Data Files: $M7_DATA_FILES"
        echo "   ✅ Validation Status: $VALIDATION_PASSED"
        echo "   ⏱️  Test Time: $TEST_TIMESTAMP"
        echo "   📝 Commit Hash: $COMMIT_HASH"
        
        # Verify validation passed
        if [ "$VALIDATION_PASSED" != "true" ]; then
          echo "❌ FAIL: M7 validation did not pass"
          exit 1
        fi
        
        # Check if we have sufficient data files
        if [ "$M7_DATA_FILES" -lt 7 ]; then
          echo "❌ FAIL: Insufficient M7 data files ($M7_DATA_FILES < 7)"
          exit 1
        fi
        
        echo "✅ M7 local test verification PASSED"
        echo "✅ This PR is ready for human review"
        
    - name: "📝 Comment on PR (Success)"
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ✅ M7 Local Test Verification PASSED
            
            This PR includes a valid M7 test marker, indicating that:
            
            - 🧪 **M7 End-to-End Test**: Completed successfully on developer machine
            - 📊 **Data Validation**: All expected M7 files present locally
            - 🏗️ **Build Process**: Completed without errors
            - ⚡ **Fast Verification**: No heavy CI/CD resources used
            
            The PR was created using the proper workflow: \`pixi run create-pr\`
            
            This PR is **ready for human review** 🚀
            
            *M7 testing completed locally - no expensive cloud resources used!*`
          })
          
    - name: "📝 Comment on PR (Failure)"  
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ❌ M7 Local Test Verification FAILED
            
            This PR **cannot be merged** because it lacks a valid M7 test marker.
            
            **Required actions:**
            1. Run locally: \`pixi run test-m7-e2e\` 
            2. Ensure test passes (creates .m7-test-passed file)
            3. Recreate PR with: \`pixi run create-pr "Your title" ISSUE_NUMBER\`
            
            **Why this approach?**
            - ⚡ **Fast**: No expensive GitHub Actions runners
            - 🏠 **Local**: Tests run on your development environment  
            - 💚 **Efficient**: Saves CI/CD resources for actual deployment
            - 🔒 **Quality**: Still enforces M7 validation requirement
            
            ❌ **This PR is BLOCKED until M7 validation passes locally**`
          })