name: Claude Code

# Interactive Claude workflow - triggers only on explicit @claude mentions
# This avoids conflicts with the automatic claude-code-review.yml workflow
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    # Only trigger on explicit @claude mentions to avoid conflicts with automatic code review workflow
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
            
          # Use sticky comments for interactive sessions to maintain conversation continuity
          use_sticky_comment: true
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4.1)
          # model: "claude-opus-4-1-20250805"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"
          
          # Custom instructions for Claude to follow project standards from CLAUDE.md
          custom_instructions: |
            CRITICAL: Follow all company policies from CLAUDE.md:
            
            1. **MANDATORY TASK INITIATION PROTOCOL**: Complete the 5-phase checklist before any task
            2. **ROUTING REQUIREMENTS**: 
               - Route complex tasks through agent-coordinator
               - Route PR creation DIRECTLY to git-ops-agent
               - Use direct tools ONLY for simple read operations
            3. **P3 WORKFLOW COMPLIANCE**: 
               - Always use p3 commands (p3 ready, p3 test, p3 ship)
               - Never bypass p3 system for git operations
               - F2 testing mandatory before PR creation
            4. **ARCHITECTURE STANDARDS**:
               - Read README.md before starting any task
               - Use common.core.directory_manager for all file I/O
               - Follow English-only standard for all technical content
               - Use centralized configurations at common/config/
            5. **QUALITY ASSURANCE**:
               - Link all work to GitHub issues for traceability
               - Update documentation when modifying functionality
               - Test all changes before creating PRs
            
            For this SEC Filing-Enhanced Quantitative Trading Platform:
            - Follow two-layer modularity principle
            - Use TypeScript for new features
            - Ensure proper error handling and validation
            - Maintain existing code patterns and conventions
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

