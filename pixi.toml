[tasks]
# Core commands from CLAUDE.md
activate = "echo 'Pixi environment activated'"
build-m7 = "python manage.py build m7"
status = "python manage.py status"
run-job = "python run_job.py"
setup-env = "ansible-playbook ansible/init.yml --ask-become-pass"

# Install additional packages via pip (cross-platform)
install-extras = "pip install pipenv ansible datasette neomodel yfinance secedgar"

# Development tasks
format = { cmd = "black . && isort .", cwd = "." }
lint = "pylint ."
typecheck = "mypy ."
test = "pytest"
test-coverage = "pytest --cov"

# --- Neo4j Service Management (via Docker) ---
# These tasks directly control the Neo4j Docker container.
neo4j-start = "docker start my-finance-neo4j"
neo4j-stop = "docker stop my-finance-neo4j"
neo4j-status = "docker ps --filter name=my-finance-neo4j"
neo4j-restart = "docker restart my-finance-neo4j"
neo4j-logs = "docker logs -f my-finance-neo4j"
# This task is for cleanup, to be used manually when you want to reset the DB.
neo4j-remove = "docker rm -f my-finance-neo4j && rm -rf data/neo4j"

[environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }