[project]
name = "my_finance"
version = "0.1.0"
description = "Graph RAG-powered DCF valuation system"
authors = ["Your Name <your.email@example.com>"]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[dependencies]
# Core cross-platform dependencies
python = "3.12.*"
openjdk = "17.*"
git = "*"
# ansible and psutil are installed via pip in the 'setup-env' task

# Essential Python packages
pip = "*"
pyyaml = ">=6.0.2,<7"
requests = ">=2.32.4,<3"
beautifulsoup4 = "*"
pandas = ">=2.3.1,<3"
matplotlib = "*"
seaborn = "*"
jupyter = "*"
black = "*"
isort = "*"
pylint = "*"
mypy = "*"
pytest = ">=8.4.1,<9"
pytest-cov = ">=6.2.1,<7"
python-dotenv = "*"
click = ">=8.2.1,<9"
tqdm = "*"
lxml = "*"
# Neo4j Python driver (official driver for connecting to Neo4j)
neo4j-python-driver = "*"
yfinance = ">=0.2.57,<0.3"
numpy = ">=1.26,<2"
attrs = ">=25.3.0,<26"
faiss-cpu = ">=1.9.0,<2"
pyarrow = ">=21.0.0,<22"
python-dateutil = ">=2.9.0.post0,<3"
pathspec = ">=0.12.1,<0.13"
platformdirs = ">=4.3.8,<5"

[tasks]
# === P3 UNIFIED COMMAND SYSTEM ===
# ALL commands now route through ./p3 CLI per Issue #111
# This eliminates direct python calls and provides consistent interface

# Core Environment Commands
activate = "./p3 activate"
status = "./p3 status"
cache-status = "./p3 cache-status"

# Development Commands
format = "./p3 format"
lint = "./p3 lint"
typecheck = "./p3 typecheck"
test = "./p3 test"
quick-test = "./p3 test --quick"

# Build Commands - Scope-based (f2/m7/n100/v3k)
build = "./p3 build"
build-f2 = "./p3 build f2"
build-m7 = "./p3 build m7"
build-n100 = "./p3 build n100"
build-v3k = "./p3 build v3k"

# Fast Build Commands
fast-build-f2 = "./p3 fast-build f2"
fast-build-m7 = "./p3 fast-build m7"
fast-build-n100 = "./p3 fast-build n100"
fast-build-v3k = "./p3 fast-build v3k"

# Legacy Build Aliases
build-test = "./p3 build f2"
build-nasdaq100 = "./p3 build n100"
build-vti = "./p3 build v3k"
build-dataset = "./p3 build"

# Build Management
build-status = "./p3 build-status"
build-size = "./p3 build-size"
clean = "./p3 clean"
clean-builds = "./p3 clean"
create-build = "./p3 create-build"
release-build = "./p3 release-build"

# ETL and Data Commands
etl-status = "./p3 etl-status"
run-job = "./p3 run-job"
build-schema = "./p3 build-schema"
import-data = "./p3 import-data"
check-coverage = "./p3 check-coverage"
migrate-data-structure = "./p3 migrate-data"

# Analysis and Reporting
dcf-analysis = "./p3 dcf-analysis"
dcf-report = "./p3 dcf-report"
simple-dcf = "./p3 dcf-analysis"
generate-report = "./p3 generate-report"
generate-report-legacy = "./p3 generate-report-legacy"
validate-strategy = "./p3 validate-strategy"
backtest = "./p3 backtest"

# Legacy Analysis Commands
dcf-analysis-legacy = "./p3 dcf-analysis-legacy"
dcf-report-legacy = "./p3 dcf-report-legacy"
simple-dcf-legacy = "./p3 simple-dcf-legacy"
hybrid-dcf-legacy = "./p3 hybrid-dcf-legacy"

# Environment Management
setup-env = "./p3 env-setup"
env-start = "./p3 env-start"
env-stop = "./p3 env-stop"
env-status = "./p3 env-status"
env-reset = "./p3 env-reset"

# Container Management
podman-status = "./p3 podman-status"
neo4j-logs = "./p3 neo4j-logs"
neo4j-connect = "./p3 neo4j-connect"
neo4j-restart = "./p3 neo4j-restart"
neo4j-stop = "./p3 neo4j-stop"
neo4j-start = "./p3 neo4j-start"

# Workflow Management
create-pr = "./p3 create-pr"
test-e2e = "./p3 e2e"
test-m7-e2e = "./p3 e2e m7"
commit-data-changes = "./p3 commit-data-changes"
cleanup-branches = "./p3 cleanup-branches"
cleanup-branches-dry-run = "./p3 cleanup-branches --dry-run"
cleanup-branches-auto = "./p3 cleanup-branches --auto"

# Infrastructure Management
shutdown-all = "./p3 shutdown-all"

# SEC Integration Commands
test-sec-integration = "./p3 test-sec-integration"
test-sec-recall = "./p3 test-sec-recall"
verify-sec-data = "./p3 verify-sec-data"
build-sec-library = "./p3 build-sec-library"
test-semantic-retrieval = "./p3 test-semantic-retrieval"

# LLM and Ollama Commands
llm-dcf-report = "./p3 llm-dcf-report"
hybrid-dcf-report = "./p3 hybrid-dcf-report"
# Direct ollama commands (non-python)
ollama-status = "curl -s http://localhost:11434/api/tags 2>/dev/null && echo 'Ollama: ✅ Running' || echo 'Ollama: ❌ Not running'"
ollama-models = "ollama list"
test-ollama = "ollama run gpt-oss:20b 'Explain DCF valuation in 2 sentences'"
setup-ollama = "ansible-playbook infra/ansible/ollama.yml"

# Testing Commands
test-yfinance = "./p3 test-yfinance"
test-config = "./p3 test-config"
test-dcf-report = "./p3 test-dcf-report"
test-protection = "./p3 test --protection"

# Status and Validation
verify-environment = "./p3 verify-env"
check-data-integrity = "./p3 check-integrity"
data-status = "./p3 build-status"

# Development Workflow Shortcuts
dev = "echo '🚀 Try: p3 refresh f2 | p3 e2e | p3 create-pr TITLE 111'; echo '💡 zsh completion: source ./scripts/p3-completion.zsh (add to ~/.zshrc)'"

# Install additional packages via pip (cross-platform)
pip-install = "pip install neomodel sentence-transformers"

[pypi-dependencies]
secedgar = ">=0.6.0, <0.7"
aiohttp = ">=3.12.15, <4"
sentence-transformers = ">=5.1.0, <6"
typing-extensions = "*"
torch = ">=2.0"
scikit-learn = ">=1.3"
