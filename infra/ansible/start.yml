---
# start.yml - Start local development environment with Podman
- name: Start Development Environment
  hosts: localhost
  connection: local
  gather_facts: yes
  tasks:
    - name: Check if Podman machine is running
      command: podman machine list
      register: podman_machine_status
      changed_when: false
      failed_when: false

    - name: Start Podman machine if not running
      shell: |
        if ! podman machine list | grep -q "Running"; then
          echo "Starting Podman machine..."
          # Check if machine exists first
          if ! podman machine list | grep -q "podman-machine-default"; then
            echo "No machine exists, creating new one with reduced resources..."
            # Create with minimal resources to avoid vfkit issues
            podman machine init --cpus 1 --memory 2048 --disk-size 10 --now
          elif podman machine list | grep -q "Never"; then
            echo "Machine never started successfully, recreating with minimal config..."
            podman machine rm -f podman-machine-default || true
            # Try with absolute minimal configuration
            podman machine init --cpus 1 --memory 1024 --disk-size 8
            sleep 5
            podman machine start
          else
            echo "Starting existing machine..."
            podman machine start
          fi
        else
          echo "Podman machine already running"
        fi
      register: podman_machine_start
      changed_when: "'Starting' in podman_machine_start.stdout or 'Creating' in podman_machine_start.stdout"
      retries: 2
      delay: 15

    - name: Start Neo4j container
      shell: |
        if ! podman ps | grep -q "neo4j-finance"; then
          echo "Starting Neo4j container..."
          podman start neo4j-finance || {
            echo "Container doesn't exist, creating new one..."
            podman run -d \
              --name neo4j-finance \
              --publish 7474:7474 \
              --publish 7687:7687 \
              --volume neo4j-data:/data \
              --env NEO4J_AUTH=neo4j/finance123 \
              --env NEO4J_PLUGINS='["apoc"]' \
              --env NEO4J_dbms_security_procedures_unrestricted=apoc.* \
              --env NEO4J_dbms_memory_heap_initial__size=512m \
              --env NEO4J_dbms_memory_heap_max__size=1G \
              --restart unless-stopped \
              neo4j:5.18-community
          }
        else
          echo "Neo4j container already running"
        fi
      register: neo4j_start
      changed_when: "'Starting' in neo4j_start.stdout or 'creating' in neo4j_start.stdout"

    - name: Wait for Neo4j to be ready
      shell: |
        echo "Waiting for Neo4j to be ready..."
        for i in {1..20}; do
          if curl -s http://localhost:7474 >/dev/null 2>&1; then
            echo "Neo4j is ready!"
            exit 0
          fi
          echo "Waiting... ($i/20)"
          sleep 3
        done
        echo "Neo4j may need more time to start"
      register: neo4j_ready
      changed_when: false

    - name: Display environment status
      debug:
        msg: |
          🚀 Development environment started!
          
          📊 Neo4j Database:
          - Web Interface: http://localhost:7474
          - Bolt Connection: bolt://localhost:7687
          - Username: neo4j / Password: finance123
          
          🛠️  Quick Commands:
          - Check status: `pixi run podman-status`
          - View logs: `pixi run neo4j-logs`
          - Connect: `pixi run neo4j-connect`
          
          ✅ Ready for development!